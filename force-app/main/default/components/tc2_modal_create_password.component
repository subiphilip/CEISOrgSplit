<apex:component >
  
   <app-create-password inline-template='true' xmlns:v-bind="http://vue.org" xmlns:v-on="http://vue.org">
    <section class="has-background-info alert is-active band">
        <article class="media container nav-container has-text-white rateboxes" style="padding:.8em;">
            <div class="media-left">
                <span class="icon is-large has-text-white "><i class="far fa-bell fa-2x"></i></span>
            </div>
            <div class="media-content">
                <p class="is-size-5 is-size-6-mobile has-text-weight-semibold">Not ready to switch plans or still in a contract?</p>
                <p class="is-size-6 is-size-7-mobile">We'll remind you when it's time to return to shop for your next electric plan</p>
            </div>
            <div class="media-right">
                <button v-on:click="showModal" class="button fixed-size is-info is-large is-rounded is-inverted">Set Reminder</button>
            </div>
        </article>
        <div id="price-alert-modal" class="modal">
            <div class="modal-background"></div>
            <div class="modal-card">
                <div id="price-alert-modal-inside" class="modal-card-body has-text-centered">
                    <button v-on:click="closeModal" class="delete is-large" aria-label="close"></button>
                    <div class="modal-card-body-inner">
                        <span class="icon is-large has-text-info"><i class="far fa-bell fa-2x"></i></span>
                        <h1 class="is-size-4 has-text-weight-semibold">Create a password</h1>
                        <p>Please create a password to view your order</p>
                            <div class="field is-horizontal">
                                <div class="field-body">
                                    <div class="field">
                                        <p class="control is-expanded">
                                            <label class="form-label" for="password">Password</label>
                                            <input id="password" class="input borderless" type="password" name="password" v-model="password" required="required" 
                                            minlength="8" pattern="^(?!.*password)(?=.*[0-9])(?=.*[a-z]).{8,}$" 
                                            title="At least 8 characters, at least one number, and at least one letter or symbol, and don't use the word password"/>
                                            <span v-show="validatePassword" class="help is-danger">Password is required</span>
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div class="field is-horizontal">
                                <div class="field-body">
                                    <div class="field">
                                        <p class="control is-expanded">
                                            <label class="form-label" for="password">Password Confirm</label>
                                            <input id="passwordConfirm" class="input borderless" type="password" name="passwordConfirm"
                                            v-model="passwordConfirm" required="required"  minlength="8" />
                                            <span v-show="validatePasswordMatch" class="help is-danger">Password must match</span>
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <button v-on:click="closeModalAndHideBar" class="button is-info is-rounded fixed-size" v-bind:disabled="!isDisabled">Set Password</button>
                    </div>
                </div>
            </div>
        </div>
    </section>
  </app-create-password>

  <script>
  Vue.component('app-create-password', {
      data: function () { 
          return {
            errors: [],
            password: '',
            passwordConfirm: '',
            validatePassword: false,
            validatePasswordMatch: false
          }
      },
      mounted: function() {

        var vm = this;
        TC.app.appSubscribe.$on('createPassword', function(arg) {
            vm.showModal()
        });
            
      },
      methods:{
        showModal: function(){
            TweenMax.to('#price-alert-modal', .24, {opacity:1, display:'block'});
            TweenMax.fromTo('.modal-background', .5, {opacity:0}, {opacity:.8})
            TweenMax.fromTo('.modal-card', .7, {y:-100, opacity:0, scale:1.3}, {y: 100, opacity:1, scale: 1, ease:Bounce.easeOut});
        },
        closeModal: function() {
            TweenMax.fromTo('.modal-card', .24, {opacity:1}, {opacity:0, scale: 1.1, ease:Bounce.easeOut});
            TweenMax.to('.modal-background', .24, {opacity:0})
            TweenMax.to('#price-alert-modal', .24, {opacity:0, display:'none'});
            TC.app.appAccountSummary.setupOrder();
        },
        submit: function() {
          this.closeModal();
        },
        validateBeforeSubmit: function(e) {
            e.preventDefault();
            this.validatePassword = false;
            this.validatePasswordMatch = false;
            
            
            if(this.password == ""){
                this.validatePassword = true;
                this.errors.push('password');                                    
            }
            if(this.password !== this.passwordConfirm) {
                this.validatePasswordMatch = true;
                this.errors.push('passwordmatch');
            }
             
            if(this.errors.length <= 0){
               this.closeModal();
            }

        },
        
      },
      watch: { 
          password: {
              handler: function() {
              }
          },
          passwordConfirm: {
              handler: function() {
              }
          }
      },
      
      props: []
    });
    </script>
</apex:component>