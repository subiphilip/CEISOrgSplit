<apex:component >
<script>
    TC.app.appShopPlans = new Vue({
      el: '#appShopPlans',
      data: {
          zip: (TC.app.account.premise.zip == null || TC.app.account.premise.zip == '') ? TC.app.account.zipDefault : TC.app.account.premise.zip,
          plansTotal:  0,
          houseSize: 0,
          isLoadingPlans: true,
          myZip: (TC.app.account.premise.zip == null || TC.app.account.premise.zip == '') ? TC.app.account.zipDefault : TC.app.account.premise.zip,
          companies: (TC.app.account.companies == null || TC.app.account.companies == '') ? TC.app.account.companies : [],
          contracts: (TC.app.account.contracts == null || TC.app.account.contracts == '') ? TC.app.account.contracts : [],
          filters: TC.app.account.shopFilters,
          sortBy:'',
          houseSqft: TC.app.appHomeProfile.houseSqft,
          tdsp: TC.app.account.tdsp,
          isReminded: TC.app.account.isReminded,
          homeSizeClass: 'icon-icon-house-medium',
          smartMeterStatus: "Pending",
          isCommercial: false,
          premiseType: 'RESIDENTIAL'
      },
      methods: {

        setPlansTotal: function(count){
              this.plansTotal = count;
              this.isLoadingPlans = false;
        },
        houseSqftUpdate: function(){
            this.smartMeterStatus = (TC.app.account.smartMeter !== undefined) ? TC.app.account.smartMeter.dataRequestStatus : 'Pending';
            if(this.houseSqft < 1500){
                TC.app.appHomeProfile.houseSize = 'small';
                this.homeSizeClass = "icon-icon-house-small";
            } else if(this.houseSqft > 3000) {
                TC.app.appHomeProfile.houseSize = 'large';
                this.homeSizeClass = "icon-icon-house-large";

            } else {
                TC.app.appHomeProfile.houseSize = 'medium';
                this.homeSizeClass = "icon-icon-house-medium"
            }
            if(TC.app.PlansShop !== undefined){
                if(TC.app.PlansShop.plans.length > 0){
                    this.sortLowHigh();
                }
            }
            if(this.isCommercial){
              this.homeSizeClass = "icon-icon-house-large";
            }

        },
        filterCompany: function(_filterBy){

            event.filterby = 'companies';
            this.filterPlans(event, _filterBy);
        },
        filterContract: function(_filterBy){
            event.filterby = 'contracts';
            this.filterPlans(event, _filterBy);
        },
        filterFeature: function(_filterBy){
            event.filterby = 'features';
            this.filterPlans(event, _filterBy);
        },
        filterPlans: function(event, _filterBy){

            var ele = $(event.target).closest('.level-item');
            if(ele.hasClass('is-filter')){
                ele.removeClass('is-filter');
                event.removeFilter = true;
            } else {
                event.removeFilter = false;
                ele.addClass('is-filter');
            }

            TC.app.PlansShop.filterPlans(event, _filterBy);
            TC.fn.onClickTween(event);
        },
        changeZip: function(){

            if(this.myZip !== this.zip){
                if(this.myZip !== ''){
                    TC.app.account.premise.zip = this.myZip;
                    TC.app.PlansShop.zip = this.myZip;
                    this.zip = this.myZip;
                    TC.app.account.zipSearchPlans = this.myZip;
                    TC.app.PlansShop.loadShopPlans();
                }
            }

        },
        sortLowHigh: function(){
            this.sortBy = 'lowHigh';
            TC.app.PlansShop.plans = TC.app.PlansShop.plans.sort(function(a, b){
                    if(a.price < b.price) return -1;
                    if(a.price > b.price) return 1;
                    return 0;
                })
            TC.app.PlansShop.pageNumber = 0;
            TC.app.PlansShop.pageNumberPlusOne = parseInt(TC.app.PlansShop.pageNumber)+1;
            TC.app.PlansShop.updatePage()
        },
        sortHighLow: function(){
            this.sortBy = 'highLow';
            TC.app.PlansShop.plans = TC.app.PlansShop.plans.sort(function(a, b){
                    if(a.price > b.price) return -1;
                    if(a.price < b.price) return 1;
                    return 0;
                })
            TC.app.PlansShop.pageNumber = 0;
            TC.app.PlansShop.pageNumberPlusOne = parseInt(TC.app.PlansShop.pageNumber)+1;
            TC.app.PlansShop.updatePage()
        },
        sortCustomer: function(){
            this.sortBy = 'customer';
            TC.app.PlansShop.plans = TC.app.PlansShop.plans.sort(function(a, b){
                    if(a.starScore > b.starScore) return -1;
                    if(a.starScore < b.starScore) return 1;
                    return 0;
                })

            TC.app.PlansShop.pageNumber = 0;
            TC.app.PlansShop.pageNumberPlusOne = parseInt(TC.app.PlansShop.pageNumber)+1;
            TC.app.PlansShop.updatePage()
        },
        sortGreen: function(){
            this.sortBy = 'green';
            TC.app.PlansShop.plans = TC.app.PlansShop.plans.sort(function(a, b){
                    if(a.green > b.green) return -1;
                    if(a.green < b.green) return 1;
                    return 0;
                })

            TC.app.PlansShop.pageNumber = 0;
            TC.app.PlansShop.pageNumberPlusOne = parseInt(TC.app.PlansShop.pageNumber)+1;
            TC.app.PlansShop.updatePage()
        },
        setupFilters: function(){

          if(TC.app.account.shopFilters.companies.length != undefined){
            TC.app.account.shopFilters.companies.filter(
                function(filter) {
                    $("[data-id='"+filter.title+"']").addClass('is-active')
            });
            TC.app.account.shopFilters.contracts.filter(
                function(filter) {
                    $("[data-id='"+filter.title+"']").addClass('is-active')
            });
            TC.app.account.shopFilters.features.filter(
                function(filter) {
                    $("[data-id='"+filter.title+"']").addClass('is-active')
            });
          }

        }
      },
      mounted: function() {
          TC.fn.checkZipInURL();

          if(this.zip == null){
              this.zip = TC.app.account.zipDefault;
          }
          this.companies = TC.app.account.companies;
          this.contracts = TC.app.account.contracts;

          if(TC.app.account.zipSearchPlans == null && sessionStorage.getItem('zipSearchPlans') == null) {
            TC.app.appSubscribe.$emit('tdspLookup', null);
          }

          if(TC.app.account.planPremiseType == 'Commercial'){
            this.isCommercial = true;
            this.premiseType = "SMALL BUSINESS"
            this.homeSizeClass = "icon-icon-house-large";
          }

          TC.app.appSubscribe.$on('updateTDSP', function(arg) {
            TC.app.appShopPlans.zip = TC.app.account.premise.zip
            TC.app.appShopPlans.myZip = TC.app.account.premise.zip
            /*TC.app.account.zipSearchPlans = this.zip;
            TC.app.account.premise.zip = this.zip;
            TC.app.appShopPlans.zip = this.zip;*/
          });
          this.houseSqftUpdate();
          //TC.fn.promptSaveNow();;
      },
      watch: {
        zip: {
          handler: function() {
            TC.app.account.premise.zip = this.zip;
            //this.myZip = this.zip;
            console.log("update shop plans zip " +this.zip);

          }
        },
        houseSqft: {
          handler: function() {
            TC.app.appHomeProfile.houseSqft = parseInt(this.houseSqft);
          }
        },
        myZip: {
          handler: function() {
            console.log("MyZip " + this.myZip);
          }
        },

      },
    });

    (function ($) {
        $(function () {
        'use strict';


      })
    })(jQuery);
</script>
</apex:component>